#!/usr/bin/env bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

#set -x 

PID=
fids=
SCRIPT_PATH="/usr/libexec/cortx-motr"
HARE_CONFIG="/etc/cortx/hare/config"
HARE_CMD="hctl fetch-fids --conf-dir $HARE_CONFIG/$(cat /etc/machine-id)"
if [[ $# < 1 ]]; then
        echo "usage - sh $0 <service-fid>"
        exit 1
fi

_handle_sigterm() {
   echo "Caught SIGTERM"
   if [[ -z $PID ]]; then
      echo "No m0d process to kill"
   else
      PID=$$
      kill -KILL $PID 2> /dev/null
   fi
}

trap _handle_sigterm SIGTERM SIGKILL

get_fids() {

        service=$1
        val=$($HARE_CMD | grep -A1 $service | grep -v "name" | tr -s " " | cut -d " " -f3 | grep -v "-")
        tmp1="${val%\"}"
        tmp="${tmp1#\"}"
        echo $tmp
}

start_all_services() {

	#starting confd service
	fids=$(get_fids confd)
	sh $SCRIPT_PATH/motr-monitor $fid &

	#starting ioservices
	fids=$(get_fids ioservice)
	for fid in $fids; do
		echo " starting m0d-$fid service"
		sh $SCRIPT_PATH/motr-monitor $fid &
	done
}

if [[ "$1" == "all" ]]; then
	start_all_services
else
	sh $SCRIPT_PATH/motr-monitor $fid &
fi

wait
